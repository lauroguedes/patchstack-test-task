<?php

namespace App\Http\Controllers;

use App\Http\Requests\StoreVulnerabilityRequest;
use App\Http\Requests\UpdateVulnerabilityRequest;
use App\Http\Resources\VulnerabilityResource;
use App\Models\Vulnerability;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Resources\Json\JsonResource;
use Illuminate\Http\Response;

class VulnerabilityController extends Controller
{
    public function __construct(private readonly Vulnerability $model)
    {
    }

    public function index(): JsonResource
    {
        return VulnerabilityResource::collection($this->model->all());
    }

    public function store(StoreVulnerabilityRequest $request): JsonResource|JsonResponse
    {
        try {
            return new VulnerabilityResource($this->model->create($request->validated()));
        } catch (\Throwable $th) {
            return response()->json([
                'error' => $th->getMessage(),
            ]);
        }
    }

    public function show(Vulnerability $vulnerability): JsonResource|JsonResponse
    {
        return VulnerabilityResource::collection($this->model->find($vulnerability));
    }

    public function update(UpdateVulnerabilityRequest $request, Vulnerability $vulnerability): JsonResource|JsonResponse
    {
        try {
            $vulnerability->update($request->validated());

            return new VulnerabilityResource($vulnerability);
        } catch (\Throwable $th) {
            return response()->json([
                'error' => $th->getMessage(),
            ]);
        }
    }

    public function destroy(Vulnerability $vulnerability): Response
    {
        $vulnerability->delete();

        return response()->noContent();
    }
}
